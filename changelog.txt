#---------------------------------- 0.24.0 -----------------------------------
[changed] forced a hard requirement on the Redis client to be 2.4.12 or later
    to remove the unnecessary thread/fork-safe pooling. The Redis client has
    been thread/fork safe since 2.4.12 (though got better multiple thread
    post-fork support in 2.9.0)
[changed] added rpqueue.set_redis_connection() for manually setting additional
    options (note that you can also just say `rpqueue.POOL = conn`)
#----------------------------------- 0.23 ------------------------------------
[added] --loglevel and --successlevel to set the minimum log level to print
    and the log level that "SUCCESS: Task completed:" messages are sent at
    when using `python -m rpqueue.run ...` invocation. Initial patch thanks
    to: https://github.com/zenweasel
[added] when running rpqueue via `rpqueue.execute_tasks()`, you can set the
    log level and success log level (--loglevel and --successlevel, mentioned
    above) via setting the rpqueue.LOG_LEVEL and rpqueue.SUCCESS_LOG_LEVEL
    attributes to one of: 'DEBUG', 'INFO', 'WARNING', or 'ERROR' .
[updated] the Lua script runner wrapper we use for delayed task execution to
    be cleaner.
#----------------------------------- 0.22 ------------------------------------
[fixed] setup.py-based installations. Ran into the bug myself :/
#----------------------------------- 0.21 ------------------------------------
[changed] where available, rpqueue will now use Lua to move delayed tasks from
    the time-based priority queue to fifo queues. This should reduce overhead
    in all cases, and should drastically improve performance for those that
    use large numbers of delayed tasks.
[changed] the version number is now PEP 386/440 compliant.
[added] this changelog that will document updates/changes/improvements in an
    easily referenced location.
[fixed] thanks to https://github.com/dmaust , rpqueue added a missing 'redis'
    requirement.
